version: "3.9"

services:
  identity_db:
    container_name: identity_db
    image: mcr.microsoft.com/mssql/server:latest
    restart: always
    volumes:
        - ./Data/Identity:/var/opt/mssql/data
    ports:
      - 8000:1433
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "HHHHhhhh1111"
    networks:
      - application

  entry_db:
    container_name: entry_db
    image: mcr.microsoft.com/mssql/server:latest
    restart: always
    volumes:
        - ./Data/Entry:/var/opt/mssql/data
    ports:
      - 8001:1433
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "HHHHhhhh1111"
    networks:
      - application

  category_db:
    container_name: category_db
    image: mcr.microsoft.com/mssql/server:latest
    restart: always
    volumes:
        - ./Data/Category:/var/opt/mssql/data
    ports:
      - 8002:1433
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "HHHHhhhh1111"
    networks:
      - application

  rabbitmq_broker:
    container_name: rabbitmq_broker
    image: rabbitmq:4-management
    hostname: rabbitmq
    restart: always
    volumes:
      - ./Data/RabbitMQ:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=HHHHhhhh1111
    networks:
      - application

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - 9000:6379
    volumes:
      - ./Data/Redis/Data:/root/redis
      - ./Data/Redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=HHHHhhhh1111
    networks:
      - application
      
  identity_microservice:
    container_name: identity_microservice
    restart: always
    build: 
      context: .
      dockerfile: .\ToDo.Microservices\ToDo.Microservices.Identity\ToDo.Microservices.Identity.API\Dockerfile
    ports:
      - 7000:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - rabbitmq_broker
      - identity_db
    networks:
      - application
      
  entries_microservice:
    container_name: entries_microservice
    restart: always
    build: 
      context: .
      dockerfile: .\ToDo.Microservices\ToDo.Microservices.Entries\ToDo.Microservices.Entries.API\Dockerfile
    ports:
      - 7001:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - rabbitmq_broker
      - identity_microservice
      - entry_db
      - redis
    networks:
      - application
      
  categories_microservice:
    container_name: categories_microservice
    restart: always
    build: 
      context: .
      dockerfile: .\ToDo.Microservices\ToDo.Microservices.Categories\ToDo.Microservices.Categories.API\Dockerfile
    ports:
      - 7002:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - rabbitmq_broker
      - identity_microservice
      - category_db
      - redis
    networks:
      - application


networks:
  application:
    driver: bridge